module.exports = function(){
    'use strict';
    function ViaEmitter() {
        this.viaText = '';
    }
    ViaEmitter.prototype = {
        append: function(text) {
            this.viaText += text;
        },
        finalText: function(text) {
            return this.viaText;
        },
        emitModule: function(mb) {
            var emitter = this;
            var count = 0;
            this.mb = mb;
            this.append('// Generated by viagen \n');
            mb.constants.map(function(item){
                item.name = '_c' + count.toString();
                emitter.emitData(item);
                });
            count = 0;
            mb.globals.map(function(item){
                item.name = '_g' + count.toString();
                emitter.emitData(item);
                });
            mb.vis.map(function(item){emitter.emitVI(item);});
            return this.finalText();
        },
        emitData: function(data) {
            this.append('// varible \n');
        },
        emitVI: function(vi) {
            var emitter = this;
            this.append(vi.name + ': VirtualInstrument<( \n');
            vi.clumps.map(function(item){emitter.emitClump(item);});
            this.append(')>\n');
        },
        emitClump: function(clump) {
            var emitter = this;
            this.append(' clump(\n');
            clump.instructions.map(function(item){emitter.emitInstruction(item);});
            this.append(' )\n');
        },
        emitInstruction: function(instruction) {
            var n = instruction.name;
            this.append('    ' + instruction.name + '(a b c)\n');
        }
    };
    return ViaEmitter;
}();
